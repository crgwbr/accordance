{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/utils/cli.ts"],"names":[],"mappings":";;;AAAA,iCAAkC;AAE3B,MAAM,OAAO,GAAG,UAAU,GAAW;IACxC,OAAO,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC,CAAC;AAFW,QAAA,OAAO,WAElB;AAEK,MAAM,UAAU,GAAG,UAAU,GAAW;IAC3C,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC,CAAC;AAFW,QAAA,UAAU,cAErB;AAEK,MAAM,SAAS,GAAG,UAAU,GAAW;IAC1C,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7B,CAAC,CAAC;AAFW,QAAA,SAAS,aAEpB;AAEF;;GAEG;AACI,MAAM,iBAAiB,GAAG,UAAU,EAAc;IACrD,MAAM,YAAY,GAAG,UAAU,WAA0B,IAAI;QACzD,OAAO,GAAG,EAAE;YACR,EAAE,EAAE,CAAC;YACL,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;gBACpB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC;IACN,CAAC,CAAC;IACF,8BAA8B;IAC9B,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;IAEnC,uBAAuB;IACvB,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtC,qBAAqB;IACrB,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvC,8BAA8B;IAC9B,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,EAAE;QACpC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAxBW,QAAA,iBAAiB,qBAwB5B","sourcesContent":["import colors = require(\"colors\");\n\nexport const makeRed = function (txt: string) {\n    return colors.red(txt);\n};\n\nexport const makeYellow = function (txt: string) {\n    return colors.yellow(txt);\n};\n\nexport const makeGreen = function (txt: string) {\n    return colors.green(txt);\n};\n\n/**\n * Register a cleanup function to be run when the process exits.\n */\nexport const registerCleanupFn = function (fn: () => void) {\n    const buildHandler = function (exitCode: number | null = null) {\n        return () => {\n            fn();\n            if (exitCode !== null) {\n                process.exit(exitCode);\n            }\n        };\n    };\n    // Run when process is closing\n    process.on(\"exit\", buildHandler());\n\n    // Catches ctrl+c event\n    process.on(\"SIGINT\", buildHandler(0));\n\n    // Catches \"kill pid\"\n    process.on(\"SIGUSR1\", buildHandler(0));\n    process.on(\"SIGUSR2\", buildHandler(0));\n\n    // Catches uncaught exceptions\n    process.on(\"uncaughtException\", (err) => {\n        console.error(err.stack);\n        buildHandler(1)();\n    });\n};\n"]}